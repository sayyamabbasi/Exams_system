/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project.deliverable;

import connection.database.ConnectDatabase;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Muhammad Junaid Tari
 */
public class CandidateView extends javax.swing.JFrame {

     int cid;
       ConnectDatabase cd = new ConnectDatabase();
       ResultSet rset = null;
       int t = 0;
       String query ;
       int rollno;
       String cand_name;
       String dept;
       int size = 0;
       int tr = 0;
       int fl = 0;
       int catsize;
       double total = 0;
       int r;
      
    public CandidateView() throws SQLException {
        initComponents();
         boolean flag=false;
        rollno=Candidate_Login.rno;
        query="Select canRollNo from CompletedTest where canRollNo='"+rollno+"'";
        rset=cd.getData(query);
        while(rset.next())
        {
            r=rset.getInt("canRollNo");
            if(rollno == r)
            {
                this.starttest.setEnabled(false);
                flag=true;
                break;
            }
            
        }
        if(flag==false)
        {
            this.viewresult.setEnabled(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        exit = new javax.swing.JButton();
        viewresult = new javax.swing.JButton();
        starttest = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setLocation(new java.awt.Point(350, 50));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        exit.setFont(new java.awt.Font("Algerian", 0, 21)); // NOI18N
        exit.setText("Cancel");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        jPanel1.add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 280, 170, -1));

        viewresult.setFont(new java.awt.Font("Algerian", 0, 21)); // NOI18N
        viewresult.setText("View Result");
        viewresult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewresultActionPerformed(evt);
            }
        });
        jPanel1.add(viewresult, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 210, 180, -1));

        starttest.setFont(new java.awt.Font("Algerian", 0, 21)); // NOI18N
        starttest.setText("Start Test");
        starttest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                starttestActionPerformed(evt);
            }
        });
        jPanel1.add(starttest, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 140, 190, -1));

        jLabel1.setFont(new java.awt.Font("Algerian", 0, 24)); // NOI18N
        jLabel1.setText("             Welcome to Automated  Test");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 90, 480, 31));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/deliverable/banner-bg-home.png"))); // NOI18N
        jPanel1.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -80, 730, 540));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 460));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void starttestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_starttestActionPerformed

        Candidate_Test testcand=new Candidate_Test();
        testcand.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_starttestActionPerformed
 public int returncat()
{
    return 10*catsize;
}

    
    private void viewresultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewresultActionPerformed
        Candidate_Result cres = null;
         try {
             cres = new Candidate_Result(this);
         } catch (SQLException ex) {
             Logger.getLogger(CandidateView.class.getName()).log(Level.SEVERE, null, ex);
         }
        cres.setVisible(true);
        this.setVisible(false);
        int fid = 0;
       
       
        try
      {
        query = "Select canRollNo from CompletedTest where canRollNo = '"+rollno+"'";
        rset = cd.getData(query);
        t = 0;
        while(rset.next())
        {
         rollno = rset.getInt("canRollNo");
         t++;
         }
         if(rollno != Candidate_Login.rno)
        {
         JOptionPane.showMessageDialog(null,"Candidate has not given test ");
         }
        else
           {
               System.out.println("Roll no is :"+rollno);
            query = "Select canName from Candidate where ROLLNO = '"+rollno+"'";         
            rset = cd.getData(query);
           while(rset.next())
           {
            cand_name = rset.getString("canName");
            }
            query = "Select Format_id from Test where canROLLNO = '"+rollno+"'";
            rset=cd.getData(query);
            while(rset.next())
            {
             fid = rset.getInt("Format_id");
             }
            query = "Select Degree from TestFormat where FormatId = '"+fid+"'";
            rset=cd.getData(query);
            while(rset.next())
            {
             dept = rset.getString("Degree");
             }
            query = "Select CategoryId from FormatCategory where Format_id = '"+fid+"'";
            rset = cd.getData(query);
            while(rset.next())
            {
             cid  = rset.getInt("CategoryId");
             catsize++;
             }
          //  System.out.println("Category size is :"+cat_size);
            size = t;
            System.out.println("size is :"+size);
            System.out.println("Degree is :"+dept);
            System.out.println("Name is :"+cand_name);
            String[] str1 = new String[size];
            String[]str2 = new String[size];
            query = "Select canAns,crtAns from CompletedTest where canRollNo = '"+rollno+"'";
            rset=cd.getData(query);
            t = 0;
            while(rset.next())
            {
             str1[t] = rset.getString("canAns");
             str2[t] = rset.getString("crtAns");
             t++;
             }
            t = 0;
            for(int j = 0 ; j < size ; j++)
            {
        
            if(str1[j].equals(str2[j]))
            {
              tr++;
            //  System.out.println("value of true is :"+tr);
             }
            else
            {
             fl++;
            // System.out.println("value of false is :"+fl);
             }
            }
          //  System.out.println("True question is :"+tr);
         //   System.out.println("False questions are :"+fl);
            total =   tr - fl*0.25;
       //     System.out.println("Total is :"+total);
            Candidate_Result cresult = new Candidate_Result(this);
            cresult.setVisible(true);
            cresult.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            
           }
      }
      catch(Exception e)
      {
          JOptionPane.showMessageDialog(null,e);
      }

    }//GEN-LAST:event_viewresultActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed

        this.dispose();
        Candidate_Login can=new Candidate_Login();
        can.setVisible(true);
        
    }//GEN-LAST:event_exitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CandidateView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CandidateView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CandidateView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CandidateView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new CandidateView().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(CandidateView.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton starttest;
    private javax.swing.JButton viewresult;
    // End of variables declaration//GEN-END:variables
}
