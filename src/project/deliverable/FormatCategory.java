/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project.deliverable;

import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
public class FormatCategory extends javax.swing.JFrame {

    Connection conn=null;
    ResultSet rset=null;
    ResultSet rst=null;
    Statement stmt=null;
    String fid;
    String catid;
    String cid;
    String forid;
    String cattype;
    String degreetype;
    String deg;
    public FormatCategory() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        fcat_ok = new javax.swing.JButton();
        noofquest = new javax.swing.JTextField();
        questmark = new javax.swing.JTextField();
        negativemark = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        category_id = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        degree_id = new javax.swing.JComboBox();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("                 Format Category");

        jLabel2.setText("Enter no of questions");

        jLabel3.setText("Enter question mark");

        jLabel4.setText("Enter negative mark");

        fcat_ok.setText("OK");
        fcat_ok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fcat_okActionPerformed(evt);
            }
        });

        jLabel5.setText("Select Category");

        category_id.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Category", "Physics", "Chemistry", "Math", "English", " " }));
        category_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                category_idActionPerformed(evt);
            }
        });

        jLabel6.setText("Select Degree");

        degree_id.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select degree", "BSSE", "BSME", "BSCS" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(117, 117, 117)
                        .addComponent(fcat_ok))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(30, 30, 30)
                        .addComponent(noofquest)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 103, Short.MAX_VALUE))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(questmark, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(negativemark, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(category_id, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(degree_id, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(category_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(degree_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(noofquest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(questmark, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(negativemark, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addComponent(fcat_ok)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fcat_okActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fcat_okActionPerformed

        boolean flag=false;
        cattype=(String) this.category_id.getSelectedItem();
        degreetype=(String) this.degree_id.getSelectedItem();
        try
        {
            conn=DriverManager.getConnection("jdbc:ucanaccess://E:\\5th semester\\java\\java.accdb");
             stmt=conn.createStatement();

        } 
        catch (SQLException ex)
        {
            Logger.getLogger(FormatCategory.class.getName()).log(Level.SEVERE, null, ex);
        } 
        switch (cattype) {
            case "Physics":
                try
                {
                    rset=stmt.executeQuery("select CategoryId from Category where CategoryName='"+cattype+"'");
                    while(rset.next())
                    {
                        catid=rset.getString("CategoryId");
                    }
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
                break;
            case "Chemistry":
                try
                {
                    rset=stmt.executeQuery("select CategoryId from Category where CategoryName='"+cattype+"'");
                    while(rset.next())
                    {
                        catid=rset.getString("CategoryId");
                    }
                }
                catch (Exception ex)
                {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }   break;
            case "Math":
                try
                {
                    rset=stmt.executeQuery("select CategoryId from Category where CategoryName='"+cattype+"'");
                    while(rset.next())
                    {
                        catid=rset.getString("CategoryId");
                    }
                }
                catch (Exception ex)
                {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }   break;
            case "English":
                try
                {
                    rset=stmt.executeQuery("select CategoryId from Category where CategoryName='"+cattype+"'");
                    while(rset.next())
                    {
                        catid=rset.getString("CategoryId");
                    }
                }
                catch (Exception ex) 
                {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }   break;
        }
        switch (degreetype) {
            case "BSSE":
                try
                {
                    rset=stmt.executeQuery("select FormatId from TestFormat where Degree='"+degreetype+"'");
                    while(rset.next())
                    {
                        fid=rset.getString("FormatId");
                    }
                    if(fid==null)
                    {
                        JOptionPane.showMessageDialog(null,"NO such field exist in Test Format\n Please First enter this field");
                        TestFormat fromat=new TestFormat();
                        fromat.setVisible(true);
                        flag=true;
                    }
                   
                    
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
                break;
            case "BSCS":
                try
                {
                    rset=stmt.executeQuery("select FormatId from TestFormat where Degree='"+degreetype+"'");
                    while(rset.next())
                    {
                        fid=rset.getString("FormatId");
                    }
                    if(fid==null)
                    {
                        JOptionPane.showMessageDialog(null,"NO such field exist in Test Format\n Please First enter this field");
                        this.setVisible(false);
                        TestFormat fromat=new TestFormat();
                        fromat.setVisible(true);
                        flag=true;
                    }
                }
                catch (Exception ex)
                {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }   break;
            case "BSME":
                try
                {
                    rset=stmt.executeQuery("select FormatId from TestFormat where Degree='"+degreetype+"'");
                    while(rset.next())
                    {
                        fid=rset.getString("FormatId");
                    }
                    if(fid==null)
                    {
                        JOptionPane.showMessageDialog(null,"NO such field exist in Test Format\n Please First enter this field");
                        TestFormat fromat=new TestFormat();
                        fromat.setVisible(true);
                        flag = true;
                    }
                }
                catch (Exception ex)
                {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }   break;
        }
        if(flag == false)
        {
        try
        {  
            rset=stmt.executeQuery("Select Format_id,CategoryId from FormatCategory where Format_id='"+fid+"'and CategoryId='"+catid+"'");
            while (rset.next())
            {
                forid=rset.getString("Format_id");
                cid=rset.getString("CategoryId");     
            }
            System.out.print("ans:"+cid+"ands:"+cid);
            if(forid==null&&cid==null)
            {
                try 
                {
                    stmt.executeUpdate("insert into FormatCategory(Format_id,CategoryId,noOfQuestions,questionMark,negativeMark)"+"values('"+this.fid+"','"+this.catid+"','"+this.noofquest.getText()+"','"+this.questmark.getText()+"','"+this.negativemark.getText()+"')");
                    JOptionPane.showMessageDialog(null, "Successfully saved into database");
                } 
                catch (SQLException | HeadlessException e) 
                {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Test Format already exist in database!");
            }
        } 
        catch (SQLException | HeadlessException e) 
        {
               JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
        
        
        }
        else
        {
          JOptionPane.showMessageDialog(null,"NO Such Degree exist");
         }
            
    }//GEN-LAST:event_fcat_okActionPerformed

    private void category_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_category_idActionPerformed

        
    }//GEN-LAST:event_category_idActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormatCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormatCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormatCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormatCategory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormatCategory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox category_id;
    private javax.swing.JComboBox degree_id;
    private javax.swing.JButton fcat_ok;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField negativemark;
    private javax.swing.JTextField noofquest;
    private javax.swing.JTextField questmark;
    // End of variables declaration//GEN-END:variables
}
