/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project.deliverable;

import java.awt.HeadlessException;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;
import java.util.StringTokenizer;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Muhammad Junaid Tariq
 */
public class SetQuestions extends javax.swing.JFrame {
        int i=0;
        int m=0;
        int cat_id=0;
        Scanner input;
        String cid;
        String str=null;
        String []str1=new String[10];
        String []str2=new String[10];
        String []str3=new String[10];
        String []str4=new String[10];
        String []str5=new String[10];
        String []str6=new String[10];
        Connection conn;
        ResultSet rset;
        Statement stmt;
        String questtype;
        String fname;
        FileNameExtensionFilter filterfile;
        JFileChooser choosefile;
        FileReader fr;
        File fl;
    public SetQuestions() {
        initComponents();
    }
   /* public void save()
    {
         try
         {
             stmt=con.createStatement();
             rset=stmt.executeQuery("insert into Question(QuestionDescription,1stOption,2ndOption,3rdOption,4thOption,CrtOption,cat_id,chck)"+"values('"+str1+"','"+str2+"','"+str3+"','"+str4+"','"+str5+"','"+"1"+"','"+"yes"+"')");
             JOptionPane.showMessageDialog(null, "save");
         }
                          
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }
*/
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        selectcategory = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        questionarea = new javax.swing.JTextArea();
        submit = new javax.swing.JButton();
        onebyone = new javax.swing.JRadioButton();
        saveall = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Select Category");

        selectcategory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Select Category", "Physics", "Chemistry", "Math", "English", " " }));
        selectcategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectcategoryActionPerformed(evt);
            }
        });

        questionarea.setColumns(20);
        questionarea.setRows(5);
        jScrollPane1.setViewportView(questionarea);

        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        onebyone.setText("Save one by one");
        onebyone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onebyoneActionPerformed(evt);
            }
        });

        saveall.setText("Save All");
        saveall.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveallActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectcategory, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 255, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(onebyone)
                    .addComponent(saveall))
                .addGap(58, 58, 58))
            .addGroup(layout.createSequentialGroup()
                .addGap(252, 252, 252)
                .addComponent(submit)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(onebyone))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectcategory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(saveall))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 197, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(submit)
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed

        String chk="yes";
            switch (questtype) {
                case "Save All":
                    try
                    {
                        conn=DriverManager.getConnection("jdbc:ucanaccess://E:\\5th semester\\java\\java.accdb");
                        for(int k =0; k < 10 ; k++)
                        {
                            stmt=conn.createStatement();
                            stmt.executeUpdate("insert into Question(QuestionDesc,1stOption,2ndOption,3rdOption,4thOption,CrtOption,cat_id,chck)"+"values('"+str1[k]+"','"+str2[k]+"','"+str3[k]+"','"+str4[k]+"','"+str5[k]+"','"+str6[k]+"','"+cid+"','"+chk+"')");
                        }
                        JOptionPane.showMessageDialog(null,"Successfully saved into database");
                        this.questionarea.setText("");
                    }
                    catch(SQLException | HeadlessException e)
                    {
                        JOptionPane.showMessageDialog(null, e.getMessage());
                    }       break;
                case "Save one by one":
                    try
                    {
                        //conn=DriverManager.getConnection("jdbc:ucanaccess://E:\\5th semester\\java\\java.accdb");
                        //stmt=conn.createStatement();
                        stmt.executeUpdate("insert into Question(QuestionDesc,1stOption,2ndOption,3rdOption,4thOption,CrtOption,cat_id,chck)"+"values('"+str1[m]+"','"+str2[m]+"','"+str3[m]+"','"+str4[m]+"','"+str5[m]+"','"+str6[m]+"','"+cid+"','"+chk+"')");
                        
                        m++;
                        this.questionarea.setText(str1[m]+"\n");
                        this.questionarea.append(str2[m]+"\n");
                        this.questionarea.append(str3[m]+"\n");
                        this.questionarea.append(str4[m]+"\n");
                        this.questionarea.append(str5[m]+"\n");
                        this.questionarea.append(str6[m]+"\n");
                    }
                    catch(Exception e)
                    {
                        JOptionPane.showMessageDialog(null, "All question have successfully submitted");
                this.questionarea.setText("");
            }       break;
            }
        
    }//GEN-LAST:event_submitActionPerformed

    private void selectcategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectcategoryActionPerformed
           
            try {
                try 
                {
                    conn=DriverManager.getConnection("jdbc:ucanaccess://E:\\5th semester\\java\\java.accdb");
                    stmt=conn.createStatement();
                }
                catch (SQLException ex) {
                    Logger.getLogger(SetQuestions.class.getName()).log(Level.SEVERE, null, ex);
                }
                String type=(String) this.selectcategory.getSelectedItem();
                switch (type) {
                    case "Physics":
                        cat_id=1;
                        choosefile=new JFileChooser();
                        filterfile=new FileNameExtensionFilter("Text Files(*.txt)", "txt");
                        choosefile.setFileFilter(filterfile);
                        choosefile.showOpenDialog(null);
                        fl=choosefile.getSelectedFile();
                        if(fl==null)
                        {
                            JOptionPane.showMessageDialog(null,"No file selected");
                            fname="";
                        }
                        else
                        {
                            fname=fl.getAbsolutePath();
                            fr=new FileReader(fname);
                            input=new Scanner(fr);
                        }
                        rset=stmt.executeQuery("select CategoryId from Category where CategoryName='"+type+"'");
                        while(rset.next())
                        {
                            cid=rset.getString("CategoryId");
                        }
                            this.selectcategory.setSelectedItem("Select Category");
                        break;
                    case "Math":
                        choosefile=new JFileChooser();
                        filterfile=new FileNameExtensionFilter("Text Files(*.txt)", "txt");
                        choosefile.setFileFilter(filterfile);
                        choosefile.showOpenDialog(null);
                        fl=choosefile.getSelectedFile();
                        if(fl==null)
                        {
                            JOptionPane.showMessageDialog(null,"No file selected");
                            fname="";
                        }
                        else
                        {
                            fname=fl.getAbsolutePath();
                            fr=new FileReader(fname);
                            input=new Scanner(fr);
                        }
                        rset=stmt.executeQuery("select CategoryId from Category where CategoryName='"+type+"'");
                        while(rset.next())
                        {
                            cid=rset.getString("CategoryId");
                        }
                        this.selectcategory.setSelectedItem("Select Category");
                             break;
                    case "Chemistry":
                        choosefile=new JFileChooser();
                        filterfile=new FileNameExtensionFilter("Text Files(*.txt)", "txt");
                        choosefile.setFileFilter(filterfile);
                        choosefile.showOpenDialog(null);
                        fl=choosefile.getSelectedFile();
                        if(fl==null)
                        {
                            JOptionPane.showMessageDialog(null,"No file selected");
                            fname="";
                        }
                        else
                        {
                            fname=fl.getAbsolutePath();
                            fr=new FileReader(fname);
                            input=new Scanner(fr);
                        }
                        rset=stmt.executeQuery("select CategoryId from Category where CategoryName='"+type+"'");
                        while(rset.next())
                        {
                            cid=rset.getString("CategoryId");
                        }
                        this.selectcategory.setSelectedItem("Select Category");
                        break;
                    case "English":
                        choosefile=new JFileChooser();
                        filterfile=new FileNameExtensionFilter("Text Files(*.txt)", "txt");
                        choosefile.setFileFilter(filterfile);
                        choosefile.showOpenDialog(null);
                        fl=choosefile.getSelectedFile();
                        if(fl==null)
                        {
                            JOptionPane.showMessageDialog(null,"No file selected");
                            fname="";
                        }
                        else
                        {
                            fname=fl.getAbsolutePath();
                            fr=new FileReader(fname);
                            input=new Scanner(fr);
                        }
                        rset=stmt.executeQuery("select CategoryId from Category where CategoryName='"+type+"'");
                        while(rset.next())
                        {
                            cid=rset.getString("CategoryId");
                        }
                        this.selectcategory.setSelectedItem("Select Category");
                        break;
                }
            } catch (FileNotFoundException | SQLException ex) {
                Logger.getLogger(SetQuestions.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_selectcategoryActionPerformed

    private void saveallActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveallActionPerformed

        questtype=this.saveall.getText();
        this.questionarea.setText("");
         while(input.hasNextLine())
         {
             str=input.nextLine();
             StringTokenizer token=new StringTokenizer(str,"$");
             while(token.hasMoreTokens())
             {
                 str1[i]=token.nextToken();
                 str2[i]=token.nextToken();
                 str3[i]=token.nextToken();
                 str4[i]=token.nextToken();
                 str5[i]=token.nextToken();
                 str6[i]=token.nextToken();
                 i++;
             }
          }

        for(int j=0; j<10 ;j++)
        {
            this.questionarea.append(str1[j]+"\n");
            this.questionarea.append(str2[j]+"\n");
            this.questionarea.append(str3[j]+"\n");
            this.questionarea.append(str4[j]+"\n");
            this.questionarea.append(str5[j]+"\n");
            this.questionarea.append(str6[j]+"\n");
        }
        this.saveall.setSelected(false);
    }//GEN-LAST:event_saveallActionPerformed

    private void onebyoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onebyoneActionPerformed
        questtype=this.onebyone.getText();
        this.questionarea.setText("");
        while(input.hasNextLine())
        {
            str=input.nextLine();
            StringTokenizer token=new StringTokenizer(str,"$");
            while(token.hasMoreTokens())
            {
                 str1[i]=token.nextToken();
                 str2[i]=token.nextToken();
                 str3[i]=token.nextToken();
                 str4[i]=token.nextToken();
                 str5[i]=token.nextToken();
                 str6[i]=token.nextToken();
                 i++;
            }
        }

            this.questionarea.setText(str1[m]+"\n");
            this.questionarea.append(str2[m]+"\n");
            this.questionarea.append(str3[m]+"\n");
            this.questionarea.append(str4[m]+"\n");
            this.questionarea.append(str5[m]+"\n");
            this.questionarea.append(str6[m]+"\n");
            this.onebyone.setSelected(false);
    }//GEN-LAST:event_onebyoneActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SetQuestions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SetQuestions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SetQuestions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SetQuestions.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SetQuestions().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton onebyone;
    private javax.swing.JTextArea questionarea;
    private javax.swing.JRadioButton saveall;
    private javax.swing.JComboBox selectcategory;
    private javax.swing.JButton submit;
    // End of variables declaration//GEN-END:variables

    private Connection DriverManager(String jdbcucanaccessE5th_semesterjavajavaaccdb) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
